name: Release

on:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Every merge of a Release Branch to `main` creates a release -> dashboard@0.2.0
  release:
    name: Release
    if: >-
      ${{github.event.push.head_commit.message == 'chore: release'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          # workaround because by default by a workflow pushing a tag cannot trigger another workflow.
          # see https://github.com/orgs/community/discussions/27028#discussioncomment-3254367
          ssh-key: "${{ secrets.CHANGESET_GH_DEPLOY_TOKEN }}"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          publish: npx changeset tag
          commit: "chore: release"
          title: "chore: release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # changeset tag incorrectly creates tags for each package. Ignore for now
        continue-on-error: true
      - run: echo "OK"
        if: job.steps.bad.status == failure()

  # Every merge of a Feature Branch to `main` creates a release candidate -> dashboard@0.1.0-next.1
  release-candidate:
    name: Release candidate
    if: >-
      ${{github.event.push.head_commit.message != 'chore: release'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: "${{ secrets.CHANGESET_GH_DEPLOY_TOKEN }}"
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "6.x"
          includePrerelease: true

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0

      - name: Define git tag
        id: tag
        run: echo "value=dashboard@${{ steps.gitversion.outputs.semVer }}" >> "$GITHUB_OUTPUT"

      - name: Tag repository
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{steps.tag.outputs.value}}',
              sha: context.sha
            })
